#!/bin/bash

source ./.malumatenv

#=====================CONFIG======================#

# COLORS
NC='\033[0m'
RED='\033[0;31m'
GREEN='\033[0;32m'
BROWN='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'

# DATE
DATESTR=$(date "+%Y-%m-%d-%H-%M-%S")

# PATH
BASEDIR=$(pwd)
DBPATH=$BASEDIR"/database"
DB=$DBPATH"/"$DBNAME".sql.bak"

#===================START========================#

if [ $1 = "push" ]; then
	printf "For MySQL root user ---> ";
	$MYSQL -u $DBUSER -p$DBPASS $DBNAME < $DB;
	echo "Database" $DBNAME "pushed...";
elif [ $1 = "pull" ]; then
	$MYSQLDUMP -u $DBUSER -p$DBPASS --add-drop-table --databases $DBNAME > $DB;
	echo "Database" $DBNAME "pulled...";
elif [ $1 = "save" ]; then
	$MYSQLDUMP -u $DBUSER -p$DBPASS --add-drop-table --databases $DBNAME > $DBPATH"/"$DBNAME"-"$DATESTR".sql.bak";
	echo "Database" $DBNAME "copied and saved...";
elif [ $1 = "env" ]; then
	vim ./malumatenv
elif [ $1 = "show" ]; then
	ls $DBPATH;
elif [ $1 = "create" ]; then
	mkdir $DBPATH;
	vim ./malumatenv
elif [ $1 = "flush" ]; then
	while true; do
		read -p "Are you sure to flush your $DBNAME database saves? " yn
		case $yn in
			[Yy]* ) rm $DBPATH"/"$DBNAME"-"*; echo "Saves flushed..."; break;;
			[Nn]* ) echo "Allright"; exit;;
			* ) echo "Please answer yes or no.";;
		esac
	done
else
	echo "";
	echo "'$1' is a wrong command...";
	echo "";
	echo -e "${CYAN}USE"	"./malumat env${NC} to set database, user credentials and MySQL executables.";
	echo -e "${BROWN}USE"	"./malumat push${NC} to push the database from your local ./database folder to your MySQL installation.";
	echo -e "${BLUE}USE"	"./malumat pull${NC} to pull the database content from your MySQL installation.";
	echo -e "${GREEN}USE"	"./malumat save${NC} to save a copy of the database content from your MySQL installation.";
	echo -e "${PURPLE}USE"	"./malumat show${NC} to see what you saved in "$DBPATH;
	echo -e "${RED}USE"	"./malumat flush${NC} to remove all temporary saves in "$DBPATH;
	echo "";

fi


#===================TESTING AREA====================#

#input="junk"
#inputArray=()
#i=0
#while [ "$input" != "" ]; [ $i -le 2 ]; do 
#	if [ i = 0 ]; then
#		read -p "Enter database user: " input
#		inputArray+=("$input");
#		i=$(( $i + 1 ));
#	elif [ i = 1 ]; then
#		read -p "Enter database name: " input
#		inputArray+=("$input");
#		i=$(( $i + 1 ));
#	elif [ i = 2 ]; then
#		read -p "Enter database password: " input
#		inputArray+=("$input");
#		i=$(( $i + 1 ));
#	else
#		for arg in "${inputArray[@]}"; do
#		    [ ! -z "$arg" ] && printf "%s\n" "$arg"
#		done
#	fi
#done < file.txt
